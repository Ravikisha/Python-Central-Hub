---

---

<div class="app">
  <h1>Was this page helpful?</h1>
  <p>Let us know how we did</p>

  <form class="container" id="contactForm">
    <div class="item">
      <label for="0">
        <input class="radio" type="radio" name="feedback" id="0" value="1" />
        <span>ü§¨</span>
      </label>
    </div>

    <div class="item">
      <label for="1">
        <input class="radio" type="radio" name="feedback" id="1" value="2" />
        <span>üôÅ</span>
      </label>
    </div>

    <div class="item">
      <label for="2">
        <input class="radio" type="radio" name="feedback" id="2" value="3" />
        <span>üò∂</span>
      </label>
    </div>

    <div class="item">
      <label for="3">
        <input class="radio" type="radio" name="feedback" id="3" value="4" />
        <span>üòÅ</span>
      </label>
    </div>

    <div class="item">
      <label for="4">
        <input class="radio" type="radio" name="feedback" id="4" value="5" />
        <span>üòç</span>
      </label>
    </div>

    <div class="w-full flex flex-col mb-4 justify-start">
      <label
        for="email"
        class="block mb-2 text-start text-sm font-poppins font-bold text-gray-900 dark:text-white"
        >Email</label
      >
      <input
        type="email"
        id="email"
        class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
        placeholder="john@email.com"
        required
        name="email"
      />
    </div>

    <div class="w-full flex flex-col mb-4 justify-start">
      <label
        for="first_name"
        class="block mb-2 text-start text-sm font-poppins font-bold text-gray-900 dark:text-white"
        >Comment</label
      >
      <textarea
        id="comment"
        class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
        placeholder="Write some about you opinion...."
        required
        name="comment"></textarea>
    </div>

    <div class="flex justify-end w-full">
      <button
        type="submit"
        class="bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline cursor-pointer"
      >
        Submit
      </button>
    </div>
  </form>
</div>

<style>
  .app {
    text-align: center;
    margin-top: 50px;
  }

  h1,
  p {
    margin: 0;
    padding: 0;
    line-height: 1.5;
  }

  .app {
    width: 90%;
    max-width: 500px;
    margin: 0 auto;
  }
  .container {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    align-items: center;
  }

  .item {
    width: 90px;
    height: 90px;
    display: flex;
    justify-content: center;
    align-items: center;
    user-select: none;
  }
  .radio {
    display: none;
  }
  .radio ~ span {
    font-size: 3rem;
    filter: grayscale(100);
    cursor: pointer;
    transition: 0.3s;
  }

  .radio:checked ~ span {
    filter: grayscale(0);
    font-size: 4rem;
  }

  @media screen and (max-width: 500px) {
    .item {
      width: 50px;
      height: 50px;
    }
    .radio ~ span {
      font-size: 2rem;
    }
    .radio:checked ~ span {
      font-size: 3rem;
    }
  }
</style>

<script type="module">
  // @ts-ignore
  import { initializeApp } from "https://www.gstatic.com/firebasejs/10.7.2/firebase-app.js";
  // @ts-ignore
  import { getAnalytics } from "https://www.gstatic.com/firebasejs/10.7.2/firebase-analytics.js";
  // @ts-ignore
  import {getFirestore, doc, setDoc } from "https://www.gstatic.com/firebasejs/10.7.2/firebase-firestore.js";
  // TODO: Add SDKs for Firebase products that you want to use
  // https://firebase.google.com/docs/web/setup#available-libraries

  // Your web app's Firebase configuration
  // For Firebase JS SDK v7.20.0 and later, measurementId is optional
  const firebaseConfig = {
    apiKey: "AIzaSyC9JRAi_fsezHf8PN-8A4tSoZYJmThEiAk",
    authDomain: "pythoncentralhub.firebaseapp.com",
    projectId: "pythoncentralhub",
    storageBucket: "pythoncentralhub.appspot.com",
    messagingSenderId: "479368830014",
    appId: "1:479368830014:web:87a5f98745df11c788056f",
    measurementId: "G-58ZCKY0YPD",
  };

  // Initialize Firebase
  const app = initializeApp(firebaseConfig);
  const analytics = getAnalytics(app);

  const db = getFirestore(app);

  // @ts-ignore
  function uuidv4() {
    return "10000000-1000-4000-8000-100000000000".replace(/[018]/g, (c) =>
    // @ts-ignore
      (
        c ^
        (crypto.getRandomValues(new Uint8Array(1))[0] & (15 >> (c / 4)))
      ).toString(16)
    );
  }

  // Reference messages collection
  // var messagesRef = firebase.database().ref("contact");

  // Listen for form submit
  document.getElementById("contactForm").addEventListener("submit", submitForm);

  // Submit form
  // @ts-ignore
  function submitForm(e) {
    e.preventDefault();

    // Get values
    var feedback = this.feedback.value;
    var email = this.email.value;
    var comment = this.comment.value;

    // Save message
    saveMessage(feedback, email, comment);

    //show alert
    alert(
      "Thank you for your feedback. We will use it to improve our website."
    );

    // Clear form
    // @ts-ignore
    const contactForm = document.getElementById("contactForm");
    // @ts-ignore
    contactForm.reset();
  }

  // Save message to firebase
  // @ts-ignore
  function saveMessage(feedback, email, comment) {
    setDoc(doc(db, "feedback", uuidv4()), {
      feedback: feedback,
      email: email,
      comment: comment,
    });
  }
</script>
